/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var user_pb = require('./user_pb.js');
goog.exportSymbol('proto.github.Deployment', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.Deployment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.Deployment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.Deployment.displayName = 'proto.github.Deployment';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.Deployment.prototype.toObject = function(opt_includeInstance) {
  return proto.github.Deployment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.Deployment} msg The msg instance to transform.
 * @return {!Object}
 */
proto.github.Deployment.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sha: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ref: jspb.Message.getFieldWithDefault(msg, 4, ""),
    task: jspb.Message.getFieldWithDefault(msg, 5, ""),
    payloadMap: (f = msg.getPayloadMap()) ? f.toArray() : [],
    environment: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    creator: (f = msg.getCreator()) && user_pb.User.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 10, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 11, ""),
    statusesUrl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    repositoryUrl: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.Deployment}
 */
proto.github.Deployment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.Deployment;
  return proto.github.Deployment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.Deployment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.Deployment}
 */
proto.github.Deployment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSha(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTask(value);
      break;
    case 6:
      var value = msg.getPayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = new user_pb.User;
      reader.readMessage(value,user_pb.User.deserializeBinaryFromReader);
      msg.setCreator(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusesUrl(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepositoryUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.github.Deployment} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.github.Deployment.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.Deployment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.github.Deployment.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getSha();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getRef();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getTask();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getPayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = this.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getCreator();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      user_pb.User.serializeBinaryToWriter
    );
  }
  f = this.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = this.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = this.getStatusesUrl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = this.getRepositoryUrl();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.github.Deployment.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.github.Deployment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.github.Deployment.prototype.setId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string sha = 3;
 * @return {string}
 */
proto.github.Deployment.prototype.getSha = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setSha = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string ref = 4;
 * @return {string}
 */
proto.github.Deployment.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setRef = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string task = 5;
 * @return {string}
 */
proto.github.Deployment.prototype.getTask = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setTask = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * map<string, string> payload = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.github.Deployment.prototype.getPayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


proto.github.Deployment.prototype.clearPayloadMap = function() {
  this.getPayloadMap().clear();
};


/**
 * optional string environment = 7;
 * @return {string}
 */
proto.github.Deployment.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setEnvironment = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.github.Deployment.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional User creator = 9;
 * @return {?proto.github.User}
 */
proto.github.Deployment.prototype.getCreator = function() {
  return /** @type{?proto.github.User} */ (
    jspb.Message.getWrapperField(this, user_pb.User, 9));
};


/** @param {?proto.github.User|undefined} value */
proto.github.Deployment.prototype.setCreator = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.github.Deployment.prototype.clearCreator = function() {
  this.setCreator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.Deployment.prototype.hasCreator = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string created_at = 10;
 * @return {string}
 */
proto.github.Deployment.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setCreatedAt = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string updated_at = 11;
 * @return {string}
 */
proto.github.Deployment.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setUpdatedAt = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string statuses_url = 12;
 * @return {string}
 */
proto.github.Deployment.prototype.getStatusesUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setStatusesUrl = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional string repository_url = 13;
 * @return {string}
 */
proto.github.Deployment.prototype.getRepositoryUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.github.Deployment.prototype.setRepositoryUrl = function(value) {
  jspb.Message.setField(this, 13, value);
};


goog.object.extend(exports, proto.github);
